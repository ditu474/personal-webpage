version: 2.1
orbs:
  coveralls: coveralls/coveralls@1.0.4
commands:
  install_dependecies:
    description: "Install project dependecies"
    steps:
      - checkout
      - restore_cache:
          key: project-{{ checksum "package-lock.json" }}
      - run:
          name: Installing dependecies
          command: npm install
      - save_cache:
          key: project-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"
  lint:
    description: "Check for code linting errors"
    steps:
      - run:
          name: Lint
          command: npm run lint
  test:
    description: "Run unit tests and e2e tests"
    steps:
      - run:
          name: Unit Test
          command: npm run test -- --watch=false --code-coverage
      - run:
          name: End to End Test
          command: npm run e2e
  store:
    description: "Store artifacts and test results"
    steps:
      - store_test_results:
          path: ./test_results
      - store_artifacts:
          path: ./coverage
      - coveralls/upload
  build:
    description: "Build angular app and persist files"
    steps:
      - checkout
      - run:
          name: Create SSR App
          command: npm run build:ssr
      - persist_to_workspace:
          root: /tmp/project
          paths:
            - dist
            - .gcloudignore
            - app.yaml
            - package-lock.json
            - package.json
  deploy:
    description: "Deploy SSR App to App Engine"
    steps:
      - attach_workspace:
          at: /tmp/project
      - run:
          name: Deploy to Google Cloud App Engine
          command: |
            cd /tmp/project
            echo ${GCLOUD_SERVICE_KEY} > /tmp/sa_key.json
            gcloud auth activate-service-account --key-file=/tmp/sa_key.json
            rm /tmp/sa_key.json
            gcloud --quiet config set project ${GCLOUD_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GCLOUD_COMPUTE_ZONE}
            gcloud --quiet app deploy
jobs:
  default:
    docker:
      - image: circleci/node:lts-browsers
    steps:
      - install_dependecies
      - lint
      - test
      - store
  deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - deploy

workflows:
  version: 2
  Base Workflow:
    jobs:
      - default
  Build And Deploy Workflow:
    jobs:
      - deploy
